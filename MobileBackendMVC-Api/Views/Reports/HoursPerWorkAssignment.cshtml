@model IEnumerable<MobileBackendMVC_Api.ViewModels.HoursPerWorkAssignmentModel>
@{
    ViewBag.Title = "HoursPerWorkAssignment";
}

@section scripts {
   
    <script src="~/Scripts/Chart.js"></script>
    <script>
        var myChart = null;
        var chartOptions = {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        };

        function alustaGraafi() {
            var ctx = document.getElementById("myChart");
            myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ["AA", "BB"],
                    datasets: [{
                        label: 'Lukumäärä',
                        data: [],
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255,99,132,1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: chartOptions
            });
        }

        function lataaDataPalvelimelta(url) {
            $.get(url, function (data) {
                myChart.config.data.datasets[0].data = data.Counts;
                myChart.config.data.labels = data.Labels;
                myChart.update();
            });
        }

        $(function () {
            // sivun alustus
            alustaGraafi();
            lataaDataPalvelimelta("/reports/GetTimesheetCounts");

            $("#showOnlyCompletedRecords").change(function () {
                var selected = $("#showOnlyCompletedRecords").is(":checked");

                var url = "/reports/GetTimesheetCounts";
                if (selected) {
                    url += "?onlyComplete=1"
                }
                lataaDataPalvelimelta(url);
            })
        });

// Contractors Hourly rate

        function alustaGraafi() {
            var ctx = document.getElementById("myChart2");
            myChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: ["AA", "BB"],
                    datasets: [{
                        label: 'Hourly Rate',
                        data: [],
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)'
                        ],
                        borderColor: [
                            'rgba(255,99,132,1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: chartOptions
            });
        }

        function lataaDataPalvelimelta(url) {
            $.get(url, function (data) {
                myChart.config.data.datasets[0].data = data.Counts;
                myChart.config.data.labels = data.Labels;
                myChart.update();
            });
        }

        $(function () {
            // sivun alustus
            alustaGraafi();
            lataaDataPalvelimelta("/reports/GetTimesheetCounts2");

            $("#showOnlyCompletedRecords2").change(function () {
                var selected = $("#showOnlyCompletedRecords2").is(":checked");

                var url = "/reports/GetTimesheetCounts2";
                if (selected) {
                    url += "?onlyComplete=1"
                }
                lataaDataPalvelimelta(url);
            })
        });
    </script>
}
@section head {

    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Scripts/DataTables/datatables.css" rel="stylesheet" />
    <link href="~/Scripts/DataTables/dataTables.bootstrap.css" rel="stylesheet" />


    <style>
        /*div.dataTables_wrapper div.dataTables_filter input {
            width: 400px;
        }*/
    </style>
}

<title>WorkAssignment</title>

<!-- !SIDEMENU CONTENT!
================================================== -->
@{ Html.RenderAction("SideMenu", "Customers");}

<!-- !PAGE CONTENT!
================================================== -->
<div class="w3-main" style="margin-left:300px">

    <!-- Push down content on small screens -->
    <div class="w3-hide-large" style="margin-top:83px"></div>

    <!-- Container -->
    <div class="w3-container">


        <h2>Hours Per Work Assignment</h2>
        <p>&nbsp;</p>

        <p>Total entries: @Model.Count().</p>
        <p>&nbsp;</p>

        <a href="~/Reports/HoursPerWorkAssignmentAsExcel" class="btn btn-primary">Export To Excel</a>
        <a href="~/Reports/HoursPerWorkAssignmentAsExcel2" class="btn btn-primary">Export To Excel2</a>
      
        <p>&nbsp;</p>

        @*<input id="showOnlyCompletedRecords" type="checkbox" /> Show Only Completed Records
        <canvas id="myChart" width="400" height="200"></canvas>*@


        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Id_WorkAssignment)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.WorkAssignmentName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TotalHours)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.WorkComplete)
                </th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id_WorkAssignment)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.WorkAssignmentName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TotalHours)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.WorkComplete)
                    </td>
                </tr>
            }

        </table>

        <h2>Contractors Hourly Rate</h2>
        <p>&nbsp;</p>

        <input id="showOnlyCompletedRecords2" type="checkbox" /> Show Only Completed Records
        <canvas id="myChart2" width="400" height="200"></canvas>


    </div><!-- End content -->
</div><!-- End page content -->


